{"version":3,"sources":["Configuration.js","logo.svg","contexts/SudokuContext.js","components/Layout/Layout.js","utils/Utils.js","services/SudokuApi.js","components/Pages/Game/ToggleSwitch.js","components/Pages/New/New.js","components/Board/NumberInput.js","components/Board/Row.js","components/Board/Board.js","services/SudokuHelper.js","components/Pages/Game/OptionsButton.js","components/Layout/Divider.js","components/Layout/SolvedModal.js","components/Pages/Game/Game.js","components/Layout/Main.js","components/Layout/NewGameButton.js","components/Layout/Header.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","baseUri","useRestAPI","SudokuContext","createContext","SudokuProvider","children","useState","boardNumbers","setBoardNumbers","boardDetails","setBoardDetails","showNewGameButton","setShowNewGameButton","initialBoard","setInitialBoard","Configuration","restAPI","setRestAPI","Provider","value","updateBoardNumbers","board","generateBoardDetails","details","row","length","rowDetails","cell","push","initial","valid","updateBoardDetails","updateInitialBoard","LayoutNoProvider","className","Layout","classNames","classes","filter","Boolean","join","SudokuApi","getSudokuBoard","level","axios","get","catch","error","console","log","noBackendBoard","boards","Easy","Intermediate","Hard","Extreme","JSON","stringify","ToggleSwitch","label","description","enabled","changeToggle","Group","as","Label","passive","Description","checked","onChange","aria-hidden","levels","name","id","New","useContext","selectedLevel","setSelectedLevel","history","useHistory","useEffect","map","levelIdx","Option","active","type","onClick","then","response","data","_Board","boardNumber","_","cloneDeep","NumberInput","colIndex","number","initialNumber","numberChanged","liveValidation","maxLength","defaultValue","event","v","target","test","parseInt","disabled","autoComplete","Row","rowNumbers","rowIndex","onNumberChange","Board","checkNumber","squareRow","Math","floor","squareColumn","col","checkSquare","checkRow","checkColumn","findEmptyCell","solveBoard","emptyCell","emptyCellRow","emptyCellColumn","num","validateBoardItems","OptionsButton","buttonLabel","clickAction","Divider","SolvedModal","setSolvedModalOpen","cheater","Game","remainingAmount","setRemainingAmount","setLiveValidation","solvedModalOpen","setCheater","validateNumber","validNumber","SudokuHelper","newBoardDetails","solveCheck","flat","Infinity","item","countRemaining","squareIndex","valueIndex","newBoard","updateNumber","solvedBoard","Main","exact","path","NewGameButton","Header","href","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3e44abf.chunk.js","sourcesContent":["const Configuration = {\n  baseUri: \"https://localhost:5001/api/\",\n  useRestAPI: true,\n};\n\nmodule.exports = Configuration;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { createContext, useState, useEffect } from \"react\";\nimport Configuration from \"../Configuration\";\n\nexport const SudokuContext = createContext();\n\nfunction SudokuProvider({ children }) {\n  const [boardNumbers, setBoardNumbers] = useState([]);\n  const [boardDetails, setBoardDetails] = useState([]);\n  const [showNewGameButton, setShowNewGameButton] = useState(false);\n  const [initialBoard, setInitialBoard] = useState([]);\n  const [restAPI, setRestAPI] = useState(Configuration.useRestAPI);\n\n  const updateBoardNumbers = (board) => {\n    setBoardNumbers(board);\n  };\n\n  const updateBoardDetails = (details) => {\n    setBoardDetails(details);\n  };\n\n  const updateInitialBoard = (board) => {\n    setInitialBoard(board);\n  };\n\n  const generateBoardDetails = (board) => {\n    const details = [];\n    for (let row = 0; row < board.length; row++) {\n      const rowDetails = [];\n      for (let cell = 0; cell < board[row].length; cell++) {\n        if (board[row][cell] !== \"\") {\n          rowDetails.push({\n            initial: true,\n            valid: true,\n          });\n        } else {\n          rowDetails.push({\n            initial: false,\n            valid: false,\n          });\n        }\n      }\n      details.push(rowDetails);\n    }\n\n    setBoardDetails(details);\n  };\n\n  return (\n    <SudokuContext.Provider\n      value={{\n        restAPI,\n        setRestAPI,\n        boardNumbers,\n        updateBoardNumbers,\n        generateBoardDetails,\n        boardDetails,\n        updateBoardDetails,\n        initialBoard,\n        updateInitialBoard,\n        showNewGameButton,\n        setShowNewGameButton,\n      }}\n    >\n      {children}\n    </SudokuContext.Provider>\n  );\n}\n\nexport { SudokuProvider };\n","import React from \"react\";\nimport { SudokuProvider } from \"../../contexts/SudokuContext\";\n\n// Layout makes sure that provider exist before rendering the rest of the DOM.\n// For example if we are trying to useContext in the same function as the initial render of the provider we would get an error as the useContext would be called first.\nfunction Layout({ children }) {\n  return (\n    <SudokuProvider>\n      <LayoutNoProvider>{children}</LayoutNoProvider>\n    </SudokuProvider>\n  );\n}\n\nfunction LayoutNoProvider({ children }) {\n  return <div className=\"h-screen w-screen bg-gray-200\">{children}</div>;\n}\n\nexport default Layout;\n","function classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport { classNames };\n","import axios from \"axios\";\nimport Configuration from \"../Configuration\";\n\nconst noBackendBoard = (level) => {\n  console.log(\"Selected level: \" + level);\n\n  const boards = {\n    \"Super Easy\": [\n      [9, \"\", 4, 2, 8, 6, 1, 3, 5],\n      [6, 2, 8, 3, 5, 1, 7, 4, 9],\n      [3, 1, 5, 7, 9, 4, 6, 8, 2],\n      [2, 5, 6, 9, 1, 8, 4, 7, 3],\n      [4, 3, 9, 6, 7, 5, 2, 1, 8],\n      [7, 8, 1, 4, 3, 2, 5, 9, 6],\n      [5, 6, 7, 8, 4, 3, 9, 2, 1],\n      [1, 4, 3, 5, 2, 9, 8, 6, 7],\n      [8, 9, 2, 1, 6, 7, 3, 5, \"\"],\n    ],\n    Easy: [\n      [5, 6, \"\", 1, \"\", 9, \"\", 7, 8],\n      [4, \"\", \"\", 5, \"\", \"\", 3, \"\", 2],\n      [2, 9, \"\", 3, \"\", \"\", \"\", 1, \"\"],\n      [\"\", 4, 6, \"\", 8, 5, 9, 2, 3],\n      [9, 5, 7, \"\", 3, \"\", \"\", 4, 1],\n      [\"\", 3, \"\", 4, \"\", \"\", 7, \"\", \"\"],\n      [\"\", 2, \"\", 8, 5, 7, \"\", \"\", \"\"],\n      [\"\", \"\", \"\", \"\", 4, \"\", 6, \"\", \"\"],\n      [3, \"\", 4, \"\", 1, \"\", 2, \"\", \"\"],\n    ],\n    Intermediate: [\n      [1, 2, 3, \"\", \"\", \"\", \"\", 9, \"\"],\n      [\"\", \"\", 7, 9, \"\", \"\", 4, \"\", 6],\n      [\"\", 6, 4, \"\", 5, \"\", \"\", 7, \"\"],\n      [7, \"\", 1, 8, \"\", \"\", 9, \"\", \"\"],\n      [\"\", \"\", \"\", \"\", \"\", \"\", 6, 3, \"\"],\n      [\"\", 8, \"\", \"\", 2, \"\", \"\", 4, \"\"],\n      [5, \"\", \"\", 4, 6, 9, 3, \"\", \"\"],\n      [4, \"\", \"\", \"\", 8, 7, \"\", 2, \"\"],\n      [3, \"\", \"\", \"\", \"\", \"\", 7, 6, \"\"],\n    ],\n    Hard: [\n      [\"\", 5, \"\", \"\", 1, \"\", \"\", \"\", 3],\n      [\"\", 7, \"\", \"\", 2, \"\", 8, \"\", \"\"],\n      [\"\", \"\", \"\", 9, 7, \"\", \"\", \"\", 4],\n      [\"\", 2, \"\", \"\", \"\", \"\", 1, \"\", \"\"],\n      [8, \"\", \"\", 4, \"\", \"\", 3, \"\", \"\"],\n      [\"\", \"\", \"\", \"\", \"\", \"\", 5, \"\", \"\"],\n      [\"\", \"\", \"\", \"\", 5, \"\", 4, 8, 6],\n      [9, \"\", 3, \"\", \"\", \"\", 7, 1, \"\"],\n      [4, \"\", \"\", 1, \"\", \"\", \"\", 3, \"\"],\n    ],\n    Extreme: [\n      [7, 1, \"\", 5, \"\", \"\", \"\", \"\", \"\"],\n      [\"\", \"\", \"\", 3, \"\", 4, \"\", \"\", \"\"],\n      [8, \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      [2, \"\", \"\", \"\", \"\", \"\", \"\", \"\", 9],\n      [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", 3],\n      [\"\", \"\", \"\", \"\", 1, 8, \"\", \"\", \"\"],\n      [\"\", \"\", \"\", \"\", \"\", \"\", 7, 8, \"\"],\n      [\"\", \"\", 4, \"\", \"\", \"\", \"\", 1, \"\"],\n      [\"\", \"\", 9, \"\", \"\", 6, \"\", \"\", \"\"],\n    ],\n  };\n  console.log(JSON.stringify(boards[level]));\n  return boards[level];\n};\n\nconst getSudokuBoard = (level) => {\n  return axios\n    .get(Configuration.baseUri + \"sudoku/?level=\" + level)\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\nconst SudokuApi = {\n  getSudokuBoard,\n  noBackendBoard,\n};\n\nexport default SudokuApi;\n","import { useState } from \"react\";\nimport { Switch } from \"@headlessui/react\";\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\nexport default function ToggleSwitch({\n  label,\n  description,\n  enabled,\n  changeToggle,\n}) {\n  return (\n    <Switch.Group as=\"div\" className=\"flex items-center justify-between\">\n      <span className=\"flex-grow flex flex-col\">\n        <Switch.Label\n          as=\"span\"\n          className=\"text-sm font-medium text-gray-900\"\n          passive\n        >\n          {label}\n        </Switch.Label>\n        <Switch.Description as=\"span\" className=\"text-sm text-gray-500\">\n          {description}\n        </Switch.Description>\n      </span>\n      <Switch\n        checked={enabled}\n        onChange={changeToggle}\n        className={classNames(\n          enabled ? \"bg-green-600\" : \"bg-gray-200\",\n          \"relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        )}\n      >\n        <span\n          aria-hidden=\"true\"\n          className={classNames(\n            enabled ? \"translate-x-5\" : \"translate-x-0\",\n            \"pointer-events-none inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200\"\n          )}\n        />\n      </Switch>\n    </Switch.Group>\n  );\n}\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { RadioGroup } from \"@headlessui/react\";\nimport { classNames } from \"../../../utils/Utils\";\nimport SudokuApi from \"../../../services/SudokuApi\";\nimport { SudokuContext } from \"../../../contexts/SudokuContext\";\nimport _ from \"lodash\";\nimport ToggleSwitch from \"../Game/ToggleSwitch\";\n\nconst levels = [\n  {\n    name: \"Super Easy\",\n    description: \"The board will be generated with 79 numbers visible\",\n    id: 1,\n  },\n  {\n    name: \"Easy\",\n    description: \"The board will be generated with 51 numbers visible\",\n    id: 2,\n  },\n  {\n    name: \"Intermediate\",\n    description: \"The board will be generated with 31 numbers visible\",\n    id: 3,\n  },\n  {\n    name: \"Hard\",\n    description: \"The board will be generated with 25 numbers visible\",\n    id: 4,\n  },\n  {\n    name: \"Extreme\",\n    description: \"The board will be generated with 17 numbers visible\",\n    id: 5,\n  },\n];\n\nconst New = () => {\n  const {\n    restAPI,\n    setRestAPI,\n    updateBoardNumbers,\n    setShowNewGameButton,\n    generateBoardDetails,\n    initialBoard,\n    updateInitialBoard,\n  } = useContext(SudokuContext);\n  const [selectedLevel, setSelectedLevel] = useState(levels[0]);\n  const history = useHistory();\n\n  const startNewGame = () => {\n    console.log(\"starting new game\");\n    let board = [];\n\n    // Let's get a new board\n    if (restAPI) {\n      SudokuApi.getSudokuBoard(selectedLevel.id).then(function (response) {\n        board = response.data[0]._Board.boardNumber;\n        console.log(board);\n        // TODO: Move to one function\n        generateBoardDetails(board);\n        updateBoardNumbers(board);\n        updateInitialBoard(_.cloneDeep(board));\n        history.push(\"/game\");\n      });\n    } else {\n      board = SudokuApi.noBackendBoard(selectedLevel.name);\n      // TODO: Move to one function\n      generateBoardDetails(board);\n      updateBoardNumbers(board);\n      updateInitialBoard(_.cloneDeep(board));\n      history.push(\"/game\");\n    }\n  };\n\n  useEffect(() => {\n    setShowNewGameButton(false);\n  });\n\n  return (\n    <div className=\"p-2\">\n      <RadioGroup value={selectedLevel} onChange={setSelectedLevel}>\n        <RadioGroup.Label className=\"sr-only\">Level settings</RadioGroup.Label>\n        <div className=\"bg-white rounded-md -space-y-px\">\n          {levels.map((level, levelIdx) => (\n            <RadioGroup.Option\n              key={level.name}\n              value={level}\n              className={({ checked }) =>\n                classNames(\n                  levelIdx === 0 ? \"rounded-tl-md rounded-tr-md\" : \"\",\n                  levelIdx === levels.length - 1\n                    ? \"rounded-bl-md rounded-br-md\"\n                    : \"\",\n                  checked\n                    ? \"bg-indigo-50 border-indigo-200 z-10\"\n                    : \"border-gray-200\",\n                  \"relative border p-4 flex cursor-pointer focus:outline-none\"\n                )\n              }\n            >\n              {({ active, checked }) => (\n                <>\n                  <span\n                    className={classNames(\n                      checked\n                        ? \"bg-indigo-600 border-transparent\"\n                        : \"bg-white border-gray-300\",\n                      active ? \"ring-2 ring-offset-2 ring-indigo-500\" : \"\",\n                      \"h-4 w-4 mt-0.5 cursor-pointer rounded-full border flex items-center justify-center\"\n                    )}\n                    aria-hidden=\"true\"\n                  >\n                    <span className=\"rounded-full bg-white w-1.5 h-1.5\" />\n                  </span>\n                  <div className=\"ml-3 flex flex-col\">\n                    <RadioGroup.Label\n                      as=\"span\"\n                      className={classNames(\n                        checked ? \"text-indigo-900\" : \"text-gray-900\",\n                        \"block text-sm font-medium\"\n                      )}\n                    >\n                      {level.name}\n                    </RadioGroup.Label>\n                    <RadioGroup.Description\n                      as=\"span\"\n                      className={classNames(\n                        checked ? \"text-indigo-700\" : \"text-gray-500\",\n                        \"block text-sm\"\n                      )}\n                    >\n                      {level.description}\n                    </RadioGroup.Description>\n                  </div>\n                </>\n              )}\n            </RadioGroup.Option>\n          ))}\n        </div>\n      </RadioGroup>\n      <div className=\"mt-4\">\n        <button\n          type=\"button\"\n          className=\"w-full items-center px-5 py-4 border border-transparent text-sm leading-4 font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n          onClick={startNewGame}\n        >\n          New game\n        </button>\n      </div>\n      <div className=\"mt-2\">\n        <ToggleSwitch\n          label=\"Use Rest API for boards\"\n          description=\"Boards are currently identical in the local client and REST API\"\n          enabled={restAPI}\n          changeToggle={setRestAPI}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default New;\n","import React from \"react\";\nimport { classNames } from \"../../utils/Utils\";\n\nconst NumberInput = ({\n  colIndex,\n  number,\n  valid,\n  initialNumber,\n  numberChanged,\n  liveValidation,\n}) => {\n  const handleChange = (v) => {\n    const valueRegEx = /[1-9]/gm;\n    // Check if the new value is between 1-9 if not empty the value for the input field\n    !valueRegEx.test(v.value) && (v.value = \"\");\n    // Correct input let's pass on the change to the parent\n    numberChanged(parseInt(v.value), v.id);\n  };\n\n  // We use input type \"text\" as the \"number\" input has stepper. The stepper can be removed by some \"magic\" but this can cause other issues.\n  // So better to use \"text\" as just check the code. Plus we validate the field on each change.\n  return (\n    <input\n      id={colIndex}\n      type=\"text\"\n      maxLength=\"1\"\n      className={classNames(\n        initialNumber\n          ? \"text-gray-600 font-bold bg-gray-100 bg-opacity-50\"\n          : \"\",\n        liveValidation &&\n          !initialNumber &&\n          !valid &&\n          !number == \"\" &&\n          \"bg-red-400\",\n        liveValidation &&\n          !initialNumber &&\n          valid &&\n          !number == \"\" &&\n          \"bg-green-500 bg-opacity-50\",\n        \"block w-full border-0 border-b border-transparent bg-white text-center\"\n      )}\n      defaultValue={number}\n      onChange={(event) => handleChange(event.target)}\n      disabled={initialNumber ? \"true\" : \"\"}\n      autoComplete=\"off\"\n    ></input>\n  );\n};\n\nexport default NumberInput;\n","import React, { useContext } from \"react\";\nimport { SudokuContext } from \"../../contexts/SudokuContext\";\nimport NumberInput from \"./NumberInput\";\nimport { classNames } from \"../../utils/Utils\";\n\nconst Row = ({ rowNumbers, rowIndex, onNumberChange, liveValidation }) => {\n  const { boardDetails } = useContext(SudokuContext);\n\n  const numberChanged = (value, colIndex) => {\n    onNumberChange(rowIndex, colIndex, value);\n  };\n\n  return (\n    <div\n      id={rowIndex}\n      key={rowIndex}\n      className={classNames(\n        rowIndex % 3 === 2 && rowIndex !== 8 ? \"border-b-2\" : \"\",\n        \"grid grid-cols-9 gap-0 \"\n      )}\n    >\n      {rowNumbers.map((number, colIndex) => (\n        <div\n          id={colIndex}\n          key={colIndex}\n          className={classNames(\n            colIndex % 3 === 2 && colIndex !== 8 ? \"border-r-4\" : \"\",\n            \"border border-opacity-100 text-center\"\n          )}\n        >\n          <NumberInput\n            colIndex={colIndex}\n            number={number}\n            valid={boardDetails[rowIndex][colIndex].valid}\n            initialNumber={boardDetails[rowIndex][colIndex].initial}\n            numberChanged={numberChanged}\n            liveValidation={liveValidation}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Row;\n","import React from \"react\";\nimport Row from \"./Row\";\n\nconst Board = ({ boardNumbers, onNumberChange, liveValidation, ...props }) => {\n  return (\n    <div className=\"grid grid-rows-9 gap-0\">\n      {boardNumbers.map((rowNumbers, rowIndex) => (\n        <Row\n          key={rowIndex}\n          rowIndex={rowIndex}\n          rowNumbers={rowNumbers}\n          onNumberChange={onNumberChange}\n          liveValidation={liveValidation}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","function checkSquare(board, rowIndex, colIndex, value) {\n  //Find the square's first row\n  const squareRow = Math.floor(rowIndex / 3) * 3;\n  //Find the square's first column\n  const squareColumn = Math.floor(colIndex / 3) * 3;\n\n  //Now each box is 3x3\n  //So we check each cell in the 3x3 square from the square starting row and column\n  for (let row = 0; row < 3; row++) {\n    for (let col = 0; col < 3; col++) {\n      // If the value is already set in the array position skip testing value\n      if (board[squareRow + row][squareColumn + col] === value) return false;\n    }\n  }\n  return true;\n}\n\nfunction checkColumn(board, colIndex, value) {\n  //Loop each row and check if number already in column\n  for (let row = 0; row < board.length; row++) {\n    if (board[row][colIndex] === value) return false;\n  }\n\n  return true;\n}\n\nfunction checkRow(board, rowIndex, value) {\n  //Loop each row and check if number already exists\n  for (let col = 0; col < board[rowIndex].length; col++) {\n    if (board[rowIndex][col] === value) return false;\n  }\n\n  return true;\n}\n\nfunction checkNumber(board, rowIndex, colIndex, value) {\n  if (\n    checkSquare(board, rowIndex, colIndex, value) &&\n    checkRow(board, rowIndex, value) &&\n    checkColumn(board, colIndex, value)\n  ) {\n    return true;\n  }\n  return false;\n}\n\nfunction findEmptyCell(board) {\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      if (!Boolean(board[row][col])) return [row, col];\n    }\n  }\n  // as we are returning numbers if any cell is empty let's keep the same logic\n  // return negative number if no empty cells are found.\n  return [-1, -1];\n}\n\nfunction validateBoardItems(board, rowIndex, colIndex, value) {\n  //We need to clear the cell we are testing\n  board[rowIndex][colIndex] = \"\";\n  const valid = checkNumber(board, rowIndex, colIndex, value);\n\n  //Put back the value that was removed.\n  board[rowIndex][colIndex] = value;\n\n  return valid;\n}\n// Solving board by running a all possible number validation for all of the empty cells.\nfunction solveBoard(board) {\n  const emptyCell = findEmptyCell(board);\n  const emptyCellRow = emptyCell[0];\n  const emptyCellColumn = emptyCell[1];\n\n  if (emptyCellRow === -1) {\n    return board;\n  }\n\n  for (let num = 1; num <= 9; num++) {\n    if (checkNumber(board, emptyCellRow, emptyCellColumn, num)) {\n      board[emptyCellRow][emptyCellColumn] = num;\n      solveBoard(board);\n    }\n  }\n\n  //Check if there are still any empty cells\n  if (findEmptyCell(board)[0] !== -1) {\n    board[emptyCellRow][emptyCellColumn] = \"\";\n  } else {\n    return board;\n  }\n}\n\nexport default { checkNumber, solveBoard, validateBoardItems };\n","import React from \"react\";\n\nexport default function OptionsButton({\n  label,\n  description,\n  buttonLabel,\n  clickAction,\n}) {\n  return (\n    <div className=\"flex items-center justify-between\">\n      <span className=\"flex-grow flex flex-col\">\n        <span className=\"text-sm font-medium text-gray-900\">{label}</span>\n        <span className=\"text-sm text-gray-500\">{description}</span>\n      </span>\n      <button\n        type=\"button\"\n        className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n        onClick={clickAction}\n      >\n        {buttonLabel}\n      </button>\n    </div>\n  );\n}\n","export default function Divider({ label }) {\n  return (\n    <div className=\"relative\">\n      <div className=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n        <div className=\"w-full border-t border-gray-200\" />\n      </div>\n      <div className=\"relative flex justify-start\">\n        <span className=\"pr-2 bg-white text-sm text-gray-500\">{label}</span>\n      </div>\n    </div>\n  );\n}\n","import { CheckIcon, FireIcon } from \"@heroicons/react/outline\";\nimport { useHistory } from \"react-router-dom\";\nimport { classNames } from \"../../utils/Utils\";\n\nconst SolvedModal = ({ setSolvedModalOpen, cheater }) => {\n  const history = useHistory();\n\n  return (\n    <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n        <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"></div>\n        {/* This element is to trick the browser into centering the modal contents. */}\n        <span\n          className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\n          aria-hidden=\"true\"\n        >\n          &#8203;\n        </span>\n        <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n          <div>\n            <div\n              className={classNames(\n                cheater ? \"bg-yellow-400\" : \"bg-green-100\",\n                \"mx-auto flex items-center justify-center h-12 w-12 rounded-full\"\n              )}\n            >\n              {cheater ? (\n                <FireIcon\n                  className=\"h-6 w-6 text-yellow-600\"\n                  aria-hidden=\"true\"\n                />\n              ) : (\n                <CheckIcon\n                  className=\"h-6 w-6 text-green-600\"\n                  aria-hidden=\"true\"\n                />\n              )}\n            </div>\n            <div className=\"mt-3 text-center sm:mt-5\">\n              <h3 className=\"text-lg leading-6 font-medium text-gray-900\">\n                {cheater ? \"Congratulations you cheater!\" : \"Congratulations!\"}\n              </h3>\n              <div className=\"mt-2\">\n                <p className=\"text-sm text-gray-500\">\n                  You have completed the game of Sudoku. Would you like to start\n                  a new game?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-cols-2 sm:gap-3 sm:grid-flow-row-dense\">\n            <button\n              type=\"button\"\n              className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:col-start-2 sm:text-sm\"\n              onClick={() => history.push(\"/\")}\n            >\n              New game\n            </button>\n            <button\n              type=\"button\"\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:col-start-1 sm:text-sm\"\n              onClick={() => setSolvedModalOpen(false)}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SolvedModal;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Board from \"../../Board/Board\";\nimport SudokuHelper from \"../../../services/SudokuHelper\";\nimport { SudokuContext } from \"../../../contexts/SudokuContext\";\nimport ToggleSwitch from \"./ToggleSwitch\";\nimport OptionsButton from \"./OptionsButton\";\nimport Divider from \"../../Layout/Divider\";\nimport SolvedModal from \"../../Layout/SolvedModal\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Game = () => {\n  const {\n    boardNumbers,\n    updateBoardNumbers,\n    boardDetails,\n    updateBoardDetails,\n    initialBoard,\n    setShowNewGameButton,\n  } = useContext(SudokuContext);\n  const history = useHistory();\n  const [remainingAmount, setRemainingAmount] = useState();\n  const [liveValidation, setLiveValidation] = useState(true);\n  const [solvedModalOpen, setSolvedModalOpen] = useState(false);\n  const [cheater, setCheater] = useState(false);\n\n  // Update the number in boardNumbers and validate the new number\n  const updateNumber = (squareIndex, valueIndex, value) => {\n    // We will add the entered number into the boardNumbers even if the number is invalid\n    const newBoard = [...boardNumbers];\n    newBoard[squareIndex][valueIndex] = value;\n    updateBoardNumbers(newBoard);\n  };\n\n  // Run validation on the number\n  // TODO: Right now if a number changed invalidates another number that was provided by the user it won't mark the second number as invalid. Need a fix for that in the future.\n  const validateNumber = (rowIndex, colIndex, value) => {\n    // Calling the helper function to validate the number.\n    const validNumber = SudokuHelper.validateBoardItems(\n      boardNumbers,\n      rowIndex,\n      colIndex,\n      value\n    );\n    console.log(validNumber);\n    let newBoardDetails = [...boardDetails];\n    newBoardDetails[rowIndex][colIndex].valid = validNumber;\n    updateBoardDetails(newBoardDetails);\n  };\n\n  // Handle change for the number\n  const onNumberChange = (rowIndex, colIndex, value) => {\n    console.log(\n      \"NumberChanged to: \" +\n        value +\n        \" on column: \" +\n        colIndex +\n        \" in row: \" +\n        rowIndex\n    );\n    // First we will validate the entered number before adding it to boardNumbers, so we can update the UI with correct validation.\n    validateNumber(rowIndex, colIndex, value);\n    updateNumber(rowIndex, colIndex, value);\n  };\n\n  const validateBoard = () => {\n    for (let rowIndex = 0; rowIndex < boardNumbers.length; rowIndex++) {\n      for (\n        let colIndex = 0;\n        colIndex < boardNumbers[rowIndex].length;\n        colIndex++\n      ) {\n        validateNumber(rowIndex, colIndex, boardNumbers[rowIndex][colIndex]);\n      }\n    }\n    setLiveValidation(true);\n    solveCheck();\n  };\n\n  const solveCheck = () => {\n    if (\n      boardDetails.flat(Infinity).filter((item) => item.valid === false)\n        .length === 0\n    ) {\n      setSolvedModalOpen(true);\n    }\n  };\n\n  // Solve board\n  // We will run solveBoard on the originalBoard when loaded, as the users input might have made the board unsolvable\n  const solveBoard = () => {\n    console.log(\"Running solveBoard\");\n    const solvedBoard = SudokuHelper.solveBoard(initialBoard);\n    // We disable the validation module as the entire board is resolved\n    // TODO: Add validation if board cannot be solved. Right now this will just show an error.\n    setLiveValidation(false);\n    updateBoardNumbers(solvedBoard);\n    setCheater(true);\n    setRemainingAmount(countRemaining(boardNumbers));\n    // Solve board does not update the BoardDetails so SolveCheck() would fail.\n    // TODO: solveBoard should also update the BoardDetails\n    setSolvedModalOpen(true);\n  };\n\n  // Count remaining empty cells in the boardNumbers\n  const countRemaining = (board) =>\n    // TODO: Fix the NaN values count\n    board.flat(Infinity).filter((item) => item === \"\").length;\n\n  // When boardNumber has changed, update the remainingAmount of cells to fill.\n  useEffect(() => {\n    setRemainingAmount(countRemaining(boardNumbers));\n  }, [boardNumbers]);\n\n  // Hook for remainingAmount change\n  useEffect(() => {\n    if (remainingAmount === 0) {\n      solveCheck();\n    }\n  }, [remainingAmount]);\n\n  useEffect(() => {\n    setShowNewGameButton(true);\n\n    if (boardNumbers.length === 0) {\n      console.log(\"Boardnumber is empty\");\n      history.push(\"/\");\n    }\n  });\n\n  return (\n    <div className=\"p-2\">\n      {solvedModalOpen && (\n        <SolvedModal\n          setSolvedModalOpen={setSolvedModalOpen}\n          cheater={cheater}\n        />\n      )}\n      <Board\n        boardNumbers={boardNumbers}\n        onNumberChange={onNumberChange}\n        liveValidation={liveValidation}\n      />\n      <div>\n        <p className=\"text-sm text-gray-400 text-right my-1\">\n          Remaining numbers:{\" \"}\n          <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-gray-100 text-gray-800\">\n            {remainingAmount}\n          </span>\n        </p>\n      </div>\n      <div className=\"my-1\">\n        <div className=\"py-2 mb-1\">\n          <Divider label=\"Options\" />\n        </div>\n        <div className=\"grid grid-cols-1 gap-4\">\n          <ToggleSwitch\n            label=\"Live validation\"\n            description=\"Validate the number upon input\"\n            enabled={liveValidation}\n            changeToggle={setLiveValidation}\n          />\n          {/* TODO: Add loading state to the button */}\n          <OptionsButton\n            label=\"Validate the board\"\n            description=\"This action will validate entire board (after running this Live Validation will be enabled)\"\n            buttonLabel=\"Validate\"\n            clickAction={validateBoard}\n          />\n          {/* TODO: Add loading state to the button */}\n          <OptionsButton\n            label=\"Solve the board\"\n            description=\"This action will solve the entire board from the initial board. \"\n            buttonLabel=\"Solve\"\n            clickAction={solveBoard}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport New from \"../Pages/New/New\";\nimport Game from \"../Pages/Game/Game\";\n\nconst Main = () => {\n  return (\n    <div>\n      <Switch>\n        <Route exact path=\"/\">\n          <New />\n        </Route>\n        <Route exact path=\"/game\">\n          <Game />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst NewGameButton = () => {\n  const history = useHistory();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      onClick={() => history.push(\"/\")}\n    >\n      New game\n    </button>\n  );\n};\n\nexport default NewGameButton;\n","import React, { useContext } from \"react\";\nimport Divider from \"./Divider\";\nimport { SudokuContext } from \"../../contexts/SudokuContext\";\nimport NewGameButton from \"./NewGameButton\";\n\nconst Header = () => {\n  const { showNewGameButton } = useContext(SudokuContext);\n\n  return (\n    <header>\n      <div className=\"w-full py-2 flex items-end justify-between \">\n        <div className=\"flex\">\n          <a href=\"#\">\n            <span className=\"sr-only\">Workflow</span>\n            <img className=\"object-none\" src=\"/icons8-sudoku-100.png\" alt=\"\" />\n          </a>\n        </div>\n        <div className=\"flex px-2 \">\n          {showNewGameButton ? <NewGameButton /> : \"\"}\n        </div>\n      </div>\n      <div className=\" mb-2 \">\n        <Divider />\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Layout from \"./components/Layout/Layout\";\nimport Main from \"./components/Layout/Main\";\nimport Header from \"./components/Layout/Header\";\n\nfunction App() {\n  return (\n    <Layout>\n      <BrowserRouter>\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:px-8 pt-5\">\n          <Header />\n          <div className=\"bg-white overflow-hidden sm:rounded-lg sm:shadow \">\n            <Main />\n          </div>\n        </div>\n      </BrowserRouter>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}